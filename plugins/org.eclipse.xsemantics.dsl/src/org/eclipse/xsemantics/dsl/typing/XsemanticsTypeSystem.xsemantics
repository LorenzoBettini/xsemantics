/*******************************************************************************
 * Copyright (c) 2013-2017 Lorenzo Bettini.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   Lorenzo Bettini - Initial contribution and API
 *******************************************************************************/

system org.eclipse.xsemantics.dsl.typing.XsemanticsTypeSystemGen

copyright
"Copyright (c) 2013-2017 Lorenzo Bettini.
All rights reserved. This program and the accompanying materials
are made available under the terms of the Eclipse Public License v1.0
which accompanies this distribution, and is available at
http://www.eclipse.org/legal/epl-v10.html

Contributors:
  Lorenzo Bettini - Initial contribution and API"


validatorExtends org.eclipse.xsemantics.dsl.validation.AbstractXsemanticsValidator

import org.eclipse.xsemantics.dsl.xsemantics.AuxiliaryDescription
import org.eclipse.xsemantics.dsl.xsemantics.ExpressionInConclusion
import org.eclipse.xsemantics.dsl.xsemantics.InputParameter
import org.eclipse.xsemantics.dsl.xsemantics.OutputParameter
import org.eclipse.xsemantics.dsl.xsemantics.RuleParameter
import org.eclipse.emf.ecore.EObject
import org.eclipse.xtext.common.types.JvmFormalParameter
import org.eclipse.xtext.common.types.JvmTypeReference
import org.eclipse.xtext.common.types.util.TypeReferences
import org.eclipse.xtext.xbase.XExpression
import org.eclipse.xtext.xbase.XVariableDeclaration
import org.eclipse.xtext.xbase.typesystem.IBatchTypeResolver

inject extension TypeReferences typeReferences
inject IBatchTypeResolver typeResolver

judgments {
	type |- EObject exp : output JvmTypeReference
}

/* 
 * for the case of an XExpression we delegate to Xbase
 * type system
 */
axiom XExpressionType
	G |- XExpression e : 
	typeResolver.resolveTypes(e).
		getActualType(e)?.toTypeReference

/* xbase type provider does not seem to return the type for var decl */
axiom XVariableDeclarationType
	G |- XVariableDeclaration e : e.type

rule ExpressionInConclusionType
	G |- ExpressionInConclusion e : JvmTypeReference type
from {
	G |- e.expression : type
}

axiom RuleParameterType
	G |- RuleParameter p : p.parameter.parameterType

axiom InputParameterType
	G |- InputParameter p : p.parameter.parameterType

axiom OutputParameterType
	G |- OutputParameter p : p.jvmTypeReference

axiom JvmFormalParameterType
	G |- JvmFormalParameter p : p.parameterType

rule AuxiliaryDescriptionType
	G |- AuxiliaryDescription aux : JvmTypeReference type
from {
	{
		aux.type != null
		type = aux.type
	}
	or
		type = getTypeForName(Boolean, aux)
}