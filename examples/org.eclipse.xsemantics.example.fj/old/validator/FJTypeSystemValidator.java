/*******************************************************************************
 * Copyright (c) 2013-2017 Lorenzo Bettini.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   Lorenzo Bettini - Initial contribution and API
 *******************************************************************************/

package org.eclipse.xsemantics.example.fj.typesystem.fj.validator;

import java.util.ArrayList;
import java.util.List;

import org.eclipse.emf.ecore.EClassifier;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.xtext.validation.Check;

import com.google.inject.Inject;

import it.xtypes.runtime.AbstractTypeSystemDeclarativeValidator;
import it.xtypes.runtime.TypingJudgmentEnvironment;
import it.xtypes.typesystem.ExpressionType;

import org.eclipse.xsemantics.example.fj.fj.FjPackage;

import org.eclipse.xsemantics.example.fj.typesystem.fj.FJTypeSystemDefinition;

/**
 * Automatically generated by XTypeS, http://xtypes.sourceforge.net
 * Do not modify it.
 * This class should be instantiated with Google Guide injector.
 */
public class FJTypeSystemValidator
		extends
			AbstractTypeSystemDeclarativeValidator {
	@Inject
	protected FJTypeSystemDefinition typeSystem;

	protected FjPackage basicPackage = FjPackage.eINSTANCE;

	@Override
	protected List<EPackage> getEPackages() {
		List<EPackage> result = new ArrayList<EPackage>();
		result.add(org.eclipse.xsemantics.example.fj.fj.FjPackage.eINSTANCE);
		return result;
	}

	protected ExpressionType createBasicType(String basic) {
		return typeSystem.createBasicType(basic);
	}

	protected ExpressionType createEClassifierType(EClassifier eClassifier) {
		return typeSystem.createEClassifierType(eClassifier);
	}

	protected ExpressionType createCollectionType(ExpressionType expressionType) {
		return typeSystem.createCollectionType(expressionType);
	}

	public static final String CHECK_TYPE_FAILED_METHOD = "CheckTypeFailedMethod";

	@Check
	public void checkMethodType(org.eclipse.xsemantics.example.fj.fj.Method object) {
		generateErrors(typeSystem.tryToApply(typeEnvironmentFor(object), "|-",
				":", createEClassifierType(basicPackage.getMethod()),
				createBasicType("String"), object), object,
				CHECK_TYPE_FAILED_METHOD);
	}

	protected TypingJudgmentEnvironment typeEnvironmentFor(
			org.eclipse.xsemantics.example.fj.fj.Method object) {
		return getDefaultTypingJudgmentEnvironmentFor(object);
	}

	public static final String CHECK_TYPE_FAILED_FIELD = "CheckTypeFailedField";

	@Check
	public void checkFieldType(org.eclipse.xsemantics.example.fj.fj.Field object) {
		generateErrors(typeSystem.tryToApply(typeEnvironmentFor(object), "|-",
				":", createEClassifierType(basicPackage.getField()),
				createBasicType("String"), object), object,
				CHECK_TYPE_FAILED_FIELD);
	}

	protected TypingJudgmentEnvironment typeEnvironmentFor(
			org.eclipse.xsemantics.example.fj.fj.Field object) {
		return getDefaultTypingJudgmentEnvironmentFor(object);
	}

	public static final String CHECK_TYPE_FAILED_CLASS = "CheckTypeFailedClass";

	@Check
	public void checkClassType(org.eclipse.xsemantics.example.fj.fj.Class object) {
		generateErrors(typeSystem.tryToApply(typeEnvironmentFor(object), "|-",
				":", createEClassifierType(basicPackage.getClass_()),
				createBasicType("String"), object), object,
				CHECK_TYPE_FAILED_CLASS);
	}

	protected TypingJudgmentEnvironment typeEnvironmentFor(
			org.eclipse.xsemantics.example.fj.fj.Class object) {
		return getDefaultTypingJudgmentEnvironmentFor(object);
	}

	public static final String CHECK_TYPE_FAILED_PROGRAM = "CheckTypeFailedProgram";

	@Check
	public void checkProgramType(org.eclipse.xsemantics.example.fj.fj.Program object) {
		generateErrors(typeSystem.tryToApply(typeEnvironmentFor(object), "|-",
				":", createEClassifierType(basicPackage.getProgram()),
				createBasicType("String"), object), object,
				CHECK_TYPE_FAILED_PROGRAM);
	}

	protected TypingJudgmentEnvironment typeEnvironmentFor(
			org.eclipse.xsemantics.example.fj.fj.Program object) {
		return getDefaultTypingJudgmentEnvironmentFor(object);
	}

}
